plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

//def apikeyPropertiesFile = rootProject.file("secrets/secrets.properties");
def apikeyProperties = new Properties()
//apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
repositories {
	mavenCentral()
	maven { url "https://maven.isxander.dev/releases" }
	maven { url "https://maven.kyrptonaught.dev" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url "https://maven.parchmentmc.org" }
	maven { url "https://jitpack.io" }
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=variantchests"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	implementation 'org.jetbrains:annotations:24.0.0'

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		mappings file("mappings/mappings-fix.tiny")
		mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mixin Extras
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}
